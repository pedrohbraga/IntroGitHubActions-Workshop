on:
  push:
     branches:
       - main

name: render-presentation-en

jobs:
  presentation-en-job:
    name: Render the presentation for this workshop
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: presentation/
    env:
      GITHUB_PAT: ${{ secrets.ACCESS_TOKEN }}
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}    
        
    steps:
      - name: 🛎️ Checkout repository
        uses: actions/checkout@v2

      - name: 💻 Setup R
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: latest
        
      - name: 💾 Cache R packages
        uses: actions/cache@v2 # Must be v2 so it accepts the GITHUB_REF from the repository_dispatch
        with:
          path: ${{ env.R_LIBS_USER }}
          key:  r-${{ hashFiles('DESCRIPTION') }}

      - name: 💻 Install pandoc and pandoc citeproc
        uses: r-lib/actions/setup-pandoc@v1
    
      - name: Install cURL Headers, UNITS, SSL, SSH2, PQ, 1g, GDAL, PROJ, Units, Magick, snapd
        run: |
          sudo apt-get install -y libssl-dev libcurl4-openssl-dev zlib1g-dev libproj-dev libgdal-dev gdal-bin libssh2-1-dev libpq-dev libudunits2-0 libudunits2-dev libmagick++-dev snapd

      - name: 💻 Snap install gifski
        run: |
          sudo snap install gifski
          
      - name: Install TinyTeX
        uses: r-lib/actions/setup-tinytex@v1
        env:
          # install full pre-built version
          TINYTEX_INSTALLER: TinyTeX        
    
      - name: 💻 Install R packages and dependencies if needed
        run: |
          Rscript -e 'list.of.packages <- c("rmarkdown", "xaringan"); 
          new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]; 
          if(length(new.packages) > 0) {  
          install.packages(new.packages, dependencies = TRUE)   
          print(paste0("The following package was installed:", new.packages))} else 
          if(length(new.packages) == 0) {
          print("All packages have been previously installed and fetched from cache.")}'
                  
      - name: 🧶 Render presentation
        run: Rscript -e 'rmarkdown::render("IntroToGitHub_GitHubActions_QCBSRSym2022_KH_PHPB_en.Rmd")'
        
      - name: 🔺 Upload artifact containing the presentation
        uses: actions/upload-artifact@v3
        with:
          name: presentation-en
          path: presentation
  
# Need to first create an empty gh-pages branch
# see https://pkgdown.r-lib.org/reference/deploy_site_github.html
# and also add secrets for an ACCESS_TOKEN

  checkout-and-deploy:
   name: Checkout and deploy the presentation within the gh-pages repository
   runs-on: ubuntu-latest
   needs: presentation-en-job
   
   steps:
      - name: 🛎️ Checkout again
        uses: actions/checkout@v2.3.1 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
        with:
          persist-credentials: false
          
      - name: 🔻 Download artifact containing the presentation
        uses: actions/download-artifact@v1
        with:
         # Artifact name
         name: presentation-en # optional
         # Destination path
         path: presentation/ # optional

      - name: 💎 Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          branch: gh-pages # The branch the action should deploy to.
          folder: presentation/
          target-folder: presentation-en # The folder the action should deploy
          clean: true
